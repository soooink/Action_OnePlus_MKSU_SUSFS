name: Build OnePlus_SukiSU Ultra All
on:
  workflow_dispatch:
    inputs:
      CPU:
        type: choice
        description: "分支"
        required: true
        default: sm8250
        options:
          - sm8250
      FEIL:
        type: choice
        description: "配置文件"
        required: true
        default: oneplus_sm8250_defconfig
        options:
          - oneplus_sm8250_defconfig
      CPUD:
        type: choice
        description: "处理器代号"
        required: true
        default: kona
        options:
          - kona
      ANDROID_VERSION:
        type: choice
        description: "内核安卓版本"
        required: true
        default: android14
        options:
          - android14
      KERNEL_VERSION:
        type: choice
        description: "内核版本"
        required: true
        default: "4.19"
        options:
          - "4.19"
      BUILD_METHOD:
        type: choice
        description: "编译方式"
        required: true
        default: perf
        options:
          - perf
      SUSFS_CI:
        type: boolean
        description: "下载SUSFS模块是否使用CI构建？"
        required: true
        default: true
      VFS:
        type: boolean
        description: "是否启用手动钩子？"
        required: true
        default: true
      KPM:
        type: boolean
        description: "是否启用KPM？"
        required: true
        default: true
      ZRAM:
        type: boolean
        description: "是否启用添加更多的ZRAM算法？"
        required: true
        default: false

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "Numbersf"
          git config --global user.email "263623064@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl flex bison build-essential zip zlib1g-dev \
            libc6-dev-i386 libncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev \
            libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig bc cpio jq

      - name: Show selected inputs debug
        run: |
          echo "Selected CPU: ${{ github.event.inputs.CPU }}"
          echo "Selected FEIL: ${{ github.event.inputs.FEIL }}"
          echo "Selected CPUD: ${{ github.event.inputs.CPUD }}"
          echo "Selected ANDROID_VERSION: ${{ github.event.inputs.ANDROID_VERSION }}"
          echo "Selected KERNEL_VERSION: ${{ github.event.inputs.KERNEL_VERSION }}"
          echo "Selected BUILD_METHOD: ${{ github.event.inputs.BUILD_METHOD }}"
          echo "Selected SUSFS_CI: ${{ github.event.inputs.SUSFS_CI }}"
          echo "Selected ZRAM: ${{ github.event.inputs.ZRAM }}"
          echo "Selected VFS: ${{ github.event.inputs.VFS }}"
          echo "Selected KPM: ${{ github.event.inputs.KPM }}"

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          git clone -b oneplus/sm8250_u_14.0.0_op9r https://github.com/OnePlusOSS/android_kernel_oneplus_sm8250 kernel_platform
          cd kernel_platform
          curl -o arch/arm64/configs/oneplus_sm8250_defconfig https://raw.githubusercontent.com/soooink/Action_OnePlus_MKSU_SUSFS/main/config

      - name: Force remove -dirty suffix
        run: |
          cd kernel_workspace/kernel_platform
          if [ -f scripts/setlocalversion ]; then
            sed -i 's/ -dirty//g' scripts/setlocalversion || true
            sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' scripts/setlocalversion || true
            echo "Modified scripts/setlocalversion to remove -dirty suffix"
            git add scripts/setlocalversion
            git commit -m "Remove -dirty suffix from kernel version" || echo "No changes to commit"
          else
            echo "scripts/setlocalversion not found, skipping..."
          fi

      - name: Add KernelSU
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/v0.9.5/kernel/setup.sh" | bash -s v0.9.5
          cd KernelSU
          KSU_VERSION=11872
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=$KSU_VERSION/" kernel/Makefile

      - name: Apply Patches SukiSU Ultra
        run: |
          cd kernel_workspace
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
          echo "SUSFS patch not found, skipping..."
          fi

      - name: Apply Hide Stuff Patches
        run: |
          cd kernel_workspace/kernel_platform/common
          if [ -f ../../SukiSU_patch/69_hide_stuff.patch ]; then
            cp ../../SukiSU_patch/69_hide_stuff.patch ./
            echo "正在打隐藏应用补丁"
            patch -p1 -F 3 < 69_hide_stuff.patch || true
          else
            echo "Hide stuff patch not found, skipping..."
          fi

      - name: Apply VFS
        run: |
          cd kernel_workspace/kernel_platform/common
          if [ "${{ github.event.inputs.VFS }}" = "true" ] && [ -f ../../SukiSU_patch/hooks/syscall_hooks.patch ]; then
            cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
            echo "正在打vfs补丁"
            patch -p1 -F 3 < syscall_hooks.patch || true
            echo "vfs_patch完成"
          else
            echo "VFS patch not applicable or not found, skipping..."
          fi

      - name: Apply LZ4KD
        run: |
          cd kernel_workspace/kernel_platform/common
          if [ "${{ github.event.inputs.ZRAM }}" = "true" ] && [ -f ../../SukiSU_patch/other/zram/zram_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ]; then
            cp ../../SukiSU_patch/other/zram/zram_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
            echo "正在打lz4kd补丁"
            patch -p1 -F 3 < lz4kd.patch || true
            echo "完成LZ4KD补丁"
          else
            echo "LZ4KD patch not applicable or not found, skipping..."
          fi

      - name: Add Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          CONFIG_FILE=arch/arm64/configs/${{ github.event.inputs.FEIL }}
          echo "CONFIG_KSU=y" >> "$CONFIG_FILE"
          echo "CONFIG_KPM=y" >> "$CONFIG_FILE"
          if [ "${{ github.event.inputs.VFS }}" = "true" ]; then
            echo "CONFIG_KSU_WITH_KPROBES=n" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_MANUAL_HOOK=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> "$CONFIG_FILE"
          else
            echo "CONFIG_KPROBES=y" >> "$CONFIG_FILE"
            echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> "$CONFIG_FILE"
          fi
          if [ "${{ github.event.inputs.ZRAM }}" = "true" ]; then
            echo "CONFIG_ZSMALLOC=y" >> "$CONFIG_FILE"
            echo "CONFIG_ZRAM=y" >> "$CONFIG_FILE"
            echo "CONFIG_MODULE_SIG=n" >> "$CONFIG_FILE"
            echo "CONFIG_CRYPTO_LZO=y" >> "$CONFIG_FILE"
            echo "CONFIG_ZRAM_DEF_COMP_LZ4KD=y" >> "$CONFIG_FILE"
            echo "CONFIG_CRYPTO_LZ4HC=y" >> "$CONFIG_FILE"
            echo "CONFIG_CRYPTO_LZ4K=y" >> "$CONFIG_FILE"
            echo "CONFIG_CRYPTO_LZ4KD=y" >> "$CONFIG_FILE"
            echo "CONFIG_CRYPTO_842=y" >> "$CONFIG_FILE"
            echo "CONFIG_ZRAM_WRITEBACK=y" >> "$CONFIG_FILE"
          fi

      - name: Build kernel
        run: |
          cd kernel_workspace/kernel_platform
          export CC=~/android/linux-x86/clang-r353983/bin/clang
          export LD=~/android/linux-x86/clang-r353983/bin/ld.lld
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export CROSS_COMPILE=~/android/aarch64-linux-android-4.9/bin/aarch64-linux-android-
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 ~/android/linux-x86
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 ~/android/aarch64-linux-android-4.9
          cd ~/android/linux-x86
          git checkout clang-r353983 || git checkout clang-r377782 || git checkout main
          cd ../../kernel_workspace/kernel_platform
          make O=out ARCH=arm64 ${{ github.event.inputs.FEIL }}
          make O=out -j$(nproc --all) ARCH=arm64 CC=$CC CLANG_TRIPLE=$CLANG_TRIPLE CROSS_COMPILE=$CROSS_COMPILE LD=$LD

      - name: Make AnyKernel3
        run: |
          cd kernel_workspace
          git clone https://github.com/osm0sis/AnyKernel3 --depth=1
          rm -rf AnyKernel3/.git
          cp kernel_platform/out/arch/arm64/boot/Image.gz AnyKernel3/
          if [ "${{ github.event.inputs.KPM }}" = "true" ]; then
            cd kernel_platform/out/arch/arm64/boot
            curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU_patch/main/kpm/patch_linux" -o patch_linux
            chmod +x patch_linux
            ./patch_linux
            mv oImage.gz Image.gz
            cp Image.gz $GITHUB_WORKSPACE/AnyKernel3/
          fi

      - name: Download Latest SUSFS Module
        run: |
          cd kernel_workspace
          if [ "${{ github.event.inputs.SUSFS_CI }}" = "true" ]; then
            LATEST_RUN_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/sidex15/susfs4ksu-module/actions/runs?status=success" | \
              jq -r '.workflow_runs[] | select(.head_branch == "v1.5.2+") | .id' | head -n 1)
            if [ -z "$LATEST_RUN_ID" ]; then
              echo "No successful run found for branch v1.5.2+"
              exit 1
            fi
            ARTIFACT_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/sidex15/susfs4ksu-module/actions/runs/$LATEST_RUN_ID/artifacts" | \
              jq -r '.artifacts[0].archive_download_url')
            curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o AnyKernel3/ksu_module_susfs.zip "$ARTIFACT_URL"
          else
            wget -P AnyKernel3 https://github.com/sidex15/ksu_module_susfs/releases/latest/download/ksu_module_susfs_1.5.2+.zip
          fi

      - name: Set suffix
        id: suffix
        run: |
          echo "value=${{ github.event.inputs.KPM == 'true' && '_KPM' || '' }}${{ github.event.inputs.VFS == 'true' && '_VFS' || '' }}${{ github.event.inputs.ZRAM == 'true' && '_LZ4KD' || '' }}" >> $GITHUB_OUTPUT

      - name: Remove _uv suffix from FEIL
        id: feil_clean
        run: |
          clean_feil="${{ github.event.inputs.FEIL }}"
          clean_feil="${clean_feil%_v}"
          clean_feil="${clean_feil%_u}"
          echo "value=$clean_feil" >> $GITHUB_OUTPUT

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_SukiSUUltra_${{ env.KSUVER }}_${{ steps.feil_clean.outputs.value }}${{ steps.suffix.outputs.value }}
          path: ./AnyKernel3/*
