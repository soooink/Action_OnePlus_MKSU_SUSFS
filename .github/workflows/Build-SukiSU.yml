name: 编译 OnePlus SM8250 内核 (ShockWAVE)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出 NonGKI_Kernel_Built_Action
        uses: actions/checkout@v4
        with:
          repository: soooink/NonGKI_Kernel_Built_Action
          ref: Stable-ShockWAVE-Kernel
          path: action

      - name: 创建工作目录并检出 OnePlus 内核源码
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          mkdir -p $GITHUB_WORKSPACE/kernel_workspace
          cd $GITHUB_WORKSPACE/kernel_workspace
          echo "Cloning kernel source..."
          git clone --recursive -b oneplus/sm8250_u_14.0.0_op9r --depth=1 https://github.com/OnePlusOSS/android_kernel_oneplus_sm8250 kernel_platform || { echo "Error: Failed to clone kernel source"; exit 1; }
          if [ -d "kernel_platform" ]; then
            echo "Kernel source cloned successfully"
            ls -la kernel_platform
          else
            echo "Error: kernel_platform directory not found"
            exit 1
          fi

      - name: 设置 LOCALVERSION
        run: |
          echo "LOCALVERSION=" >> $GITHUB_ENV
        working-directory: $GITHUB_WORKSPACE/kernel_workspace/kernel_platform

      - name: 设置编译环境
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison flex libssl-dev libncurses5-dev python3-dev python3-pyelftools libfdt-dev gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf

      - name: 下载 Neutron Clang
        run: |
          wget -q https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master-kernel-build-2022/clang-r450784e.tar.gz
          mkdir -p clang
          tar -xzf clang-r450784e.tar.gz -C clang
          ls -la clang
        working-directory: $GITHUB_WORKSPACE/kernel_workspace/kernel_platform

      - name: 下载 Linaro GCC (arm64)
        run: |
          wget -q https://snapshots.linaro.org/gnu-toolchain/14.0-2023.06-1/aarch64-linux-gnu/gcc-linaro-14.0.0-2023.06-x86_64_aarch64-linux-gnu.tar.xz
          mkdir -p gcc64
          tar -xJf gcc-linaro-14.0.0-2023.06-x86_64_aarch64-linux-gnu.tar.xz -C gcc64
          ls -la gcc64
        working-directory: $GITHUB_WORKSPACE/kernel_workspace/kernel_platform

      - name: 下载 Linaro GCC (arm32)
        run: |
          wget -q https://snapshots.linaro.org/gnu-toolchain/14.0-2023.06-1/arm-linux-gnueabihf/gcc-linaro-14.0.0-2023.06-x86_64_arm-linux-gnueabihf.tar.xz
          mkdir -p gcc32
          tar -xJf gcc-linaro-14.0.0-2023.06-x86_64_arm-linux-gnueabihf.tar.xz -C gcc32
          ls -la gcc32
        working-directory: $GITHUB_WORKSPACE/kernel_workspace/kernel_platform

      - name: 检出 AnyKernel3
        run: |
          git clone --depth=1 -b ShockWAVE https://github.com/MrShockWAVEE/AnyKernel3.git anykernel3
          ls -la anykernel3
        working-directory: $GITHUB_WORKSPACE/kernel_workspace

      - name: 加载 config-suki.env 配置
        run: |
          cp action/config-suki.env kernel_platform/.env
          export $(cat kernel_platform/.env | xargs)
          env | grep -E "ARCH|SUBARCH|DEFCONFIG|CLANG_PATH|CROSS_COMPILE"
        working-directory: $GITHUB_WORKSPACE/kernel_workspace

      - name: 编译内核
        run: |
          cd kernel_platform
          ./action/build.sh
        working-directory: $GITHUB_WORKSPACE/kernel_workspace
        env:
          DEVICE: lemonadep
          ARCH: arm64
          SUBARCH: arm64
          DEFCONFIG: oneplus9r_defconfig
          CLANG_PATH: $GITHUB_WORKSPACE/kernel_workspace/kernel_platform/clang/bin
          CROSS_COMPILE: $GITHUB_WORKSPACE/kernel_workspace/kernel_platform/gcc64/bin/aarch64-linux-gnu-
          CROSS_COMPILE_ARM32: $GITHUB_WORKSPACE/kernel_workspace/kernel_platform/gcc32/bin/arm-linux-gnueabihf-
          KERNEL_IMAGE_NAME: Image.gz-dtb
          ENABLE_KERNELSU: true
          KERNELSU_TAG: susfs-main
          USE_NEUTRON_CLANG: true
          USE_CUSTOM_GCC_64: true
          USE_CUSTOM_GCC_32: true
          USE_CUSTOM_ANYKERNEL3: true
          EXTRA_CMDS: LLVM=1 LLVM_IAS=1 LD=ld.lld AS=llvm-as AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump READELF=llvm-readelf STRIP=llvm-strip CONFIG_NO_ERROR_ON_MISMATCH=y TARGET_BUILD_VARIANT=user

      - name: 上传内核镜像
        uses: actions/upload-artifact@v4
        with:
          name: kernel-image
          path: $GITHUB_WORKSPACE/kernel_workspace/kernel_platform/arch/arm64/boot/Image.gz-dtb
          if-no-files-found: error

      - name: 上传 AnyKernel3 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: kernel-zip
          path: $GITHUB_WORKSPACE/kernel_workspace/anykernel3/*.zip
          if-no-files-found: error
